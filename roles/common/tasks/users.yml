---

# -----------------------------------------------------------------------------
# deploy_user
#
# Some servers are set up with a special username with root uid.  This is
# called the deploy_user here.

- name: Create dedicated deploy user for other builders
  when: deploy_user is defined
  user:
    name: "{{ deploy_user }}"
    group: root
    uid: 0
    comment: "KernelCi ansible deployment user (as root)"
    home: "/root/{{ deploy_user }}"
    shell: /bin/bash
    non_unique: true
  tags:
    - setup
    - user

- name: Create the deploy user ssh dir
  when: deploy_user is defined
  file:
    path: "/root/{{ deploy_user }}/.ssh"
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - user
    - setup

- name: Setup the authorized_keys file for the deploy user
  when: deploy_user is defined
  copy:
    src: authorized_keys
    dest: "/root/{{ deploy_user }}/.ssh/authorized_keys"
    owner: root
    group: root
    mode: 0600
  tags:
    - user
    - setup


# -----------------------------------------------------------------------------
# admin_user
#
# Some servers have a regular user pre-installed with sudo rights, typically
# 'kernelci'.  This is called the admin_user here.  Simply install the
# authorized public keys for it.

- name: Setup the authorized_keys file for the admin user
  when: admin_user is defined
  copy:
    src: authorized_keys
    dest: "/home/{{ admin_user }}/.ssh/authorized_keys"
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: 0600
  tags:
    - user
    - setup


# -----------------------------------------------------------------------------
# root user
#
# Some servers only have a root user defined with ssh enabled.  This is the
# default when there is no deploy_user or admin_user defined.

- name: Create the root user ssh dir
  when: deploy_user is not defined
  file:
    path: "/root/.ssh"
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - user
    - setup

- name: Setup the authorized_keys file for the root user
  when: deploy_user is not defined
  copy:
    src: authorized_keys
    dest: "/root/.ssh/authorized_keys"
    owner: root
    group: root
    mode: 0600
  tags:
    - user
    - setup

- name: Create the build group
  group:
    name: buildslave
    state: present
  tags:
    - install
    - user


# -----------------------------------------------------------------------------
# buildslave user
#
# The Jenkins client needs to have ssh access to the node with an unpriviledged
# user, called the buildslave user here.  Old builders used a password, newer
# ones use an ssh key.

- name: Create the build user
  user:
    name: buildslave
    group: buildslave
    comment: "KernelCi build slave user"
    home: /home/buildslave
    shell: /bin/bash
    state: present
    password: "{{ buildslave_password }}"
    system: yes
    uid: 996
  tags:
    - install
    - user
    - secrets

- name: Create the build user ssh dir
  file:
    path: "/home/buildslave/.ssh"
    state: directory
    owner: buildslave
    group: buildslave
    mode: 0700
  tags:
    - user
    - setup

- name: Setup the authorized_keys file for the build user
  copy:
    src: buildslave_authorized_keys
    dest: "/home/buildslave/.ssh/authorized_keys"
    owner: buildslave
    group: buildslave
    mode: 0600
  tags:
    - user
    - setup
